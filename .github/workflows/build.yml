name: build

on:
  push:
    branches: [master]
  # pull_request:
  #   types: [closed]

env:
  IMAGE: cronjob-cleaner
  K8S_NAMESPACE: monitoring
  VERSION: 0.2

jobs:
  build:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      #Setup
      - uses: actions/checkout@v2
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.0"
          config: "./manifests/kind.yaml"
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.18.1"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: kevinshelaga
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #Apply a busybox cronjob for testing
      - run: kubectl apply -f ./manifests/busybox.yaml
      - run: kubectl create job --from=cronjob/hello manual-hello

      #Test
      - run: go test -v ./... -coverprofile="coverage.txt" -covermode=atomic

      #Upload codecov
      - run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}

      #Docker Build
      - run: go get
      - run: go install
      - name: Build
        run: |-
          docker build . \
            --tag "kevinshelaga/$IMAGE:$VERSION" \
            --tag "kevinshelaga/$IMAGE:latest"

      #Test kustomize install
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      - name: Copy Manifests
        run: cp -a ./manifests/. .
      - name: Deploy
        run: |-
          ./kustomize edit set image kevinshelaga/$IMAGE:tag=kevinshelaga/$IMAGE:$VERSION
          ./kustomize build . | kubectl -n $K8S_NAMESPACE apply -f -
          ./kustomize build . | kubectl -n $K8S_NAMESPACE delete -f -

      #Test helm install
      - uses: azure/setup-helm@v1
        with:
          version: "latest"
        id: install
      - run: helm install helm-test ./helm

      #Docker push
      - name: Push
        run: |-
          docker push "kevinshelaga/$IMAGE:$VERSION"
          docker push "kevinshelaga/$IMAGE:latest"
